{
  "id": "meta_github_89266735",
  "title": "ParlAI",
  "description": "A framework for training and evaluating AI models on a variety of openly available dialogue datasets.",
  "url": "https://github.com/facebookresearch/ParlAI",
  "language": "Python",
  "stars": 10622,
  "forks": 2090,
  "created_at": "2017-04-24T17:10:44Z",
  "updated_at": "2025-09-26T08:31:05Z",
  "topics": [],
  "readme_content": "<p align=\"center\">\n <img width=\"70%\" src=\"docs/source/\\_static/img/parlai.png\" />\n</p>\n\n<p align=\"center\">\n   <a href=\"https://github.com/facebookresearch/ParlAI/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" alt=\"CircleCI\" />\n  </a>\n   <a href=\"https://pypi.org/project/parlai/\">\n    <img src=\"https://img.shields.io/pypi/v/parlai?color=blue&label=release\" alt=\"CircleCI\" />\n  </a>\n    <a href=\"https://circleci.com/gh/facebookresearch/ParlAI/tree/main\">\n    <img src=\"https://img.shields.io/circleci/build/github/facebookresearch/ParlAI/main\" alt=\"Coverage\" />\n  </a>\n    <a href=\"https://codecov.io/gh/facebookresearch/ParlAI\">\n    <img src=\"https://img.shields.io/codecov/c/github/facebookresearch/ParlAI\" alt=\"GitHub contributors\" />\n  </a>\n    <a href=\"https://img.shields.io/github/contributors/facebookresearch/ParlAI\">\n    <img src=\"https://img.shields.io/github/contributors/facebookresearch/ParlAI\"/>\n  </a>\n    <a href=\"https://twitter.com/parlai_parley\">\n    <img src=\"https://img.shields.io/twitter/follow/parlai_parley?label=Twitter&style=social\" alt=\"Twitter\" />\n  </a>\n </p>\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------\n\n[ParlAI](http://parl.ai) (pronounced “par-lay”) is a python framework for\nsharing, training and testing dialogue models, from open-domain chitchat, to\ntask-oriented dialogue, to visual question answering.\n\nIts goal is to provide researchers:\n\n- **100+ popular datasets available all in one place, with the same API**, among them [PersonaChat](https://arxiv.org/abs/1801.07243), [DailyDialog](https://arxiv.org/abs/1710.03957), [Wizard of Wikipedia](https://openreview.net/forum?id=r1l73iRqKm), [Empathetic Dialogues](https://arxiv.org/abs/1811.00207), [SQuAD](https://rajpurkar.github.io/SQuAD-explorer/), [MS MARCO](http://www.msmarco.org/), [QuAC](https://www.aclweb.org/anthology/D18-1241), [HotpotQA](https://hotpotqa.github.io/), [QACNN & QADailyMail](https://arxiv.org/abs/1506.03340), [CBT](https://arxiv.org/abs/1511.02301), [BookTest](https://arxiv.org/abs/1610.00956), [bAbI Dialogue tasks](https://arxiv.org/abs/1605.07683), [Ubuntu Dialogue](https://arxiv.org/abs/1506.08909), [OpenSubtitles](http://opus.lingfil.uu.se/OpenSubtitles.php),  [Image Chat](https://arxiv.org/abs/1811.00945), [VQA](http://visualqa.org/), [VisDial](https://arxiv.org/abs/1611.08669) and [CLEVR](http://cs.stanford.edu/people/jcjohns/clevr/). See the complete list [here](https://github.com/facebookresearch/ParlAI/blob/main/parlai/tasks/task_list.py).\n- a wide set of [**reference models**](https://parl.ai/docs/agents_list.html) -- from retrieval baselines to Transformers.\n- a large [zoo of **pretrained models**](https://parl.ai/docs/zoo.html) ready to use off-the-shelf\n- seamless **integration of [Amazon Mechanical Turk](https://www.mturk.com/mturk/welcome)** for data collection and human evaluation\n- **integration with [Facebook Messenger](https://parl.ai/docs/tutorial_chat_service.html)** to connect agents with humans in a chat interface\n- a large range of **helpers to create your own agents** and train on several tasks with **multitasking**\n- **multimodality**, some tasks use text and images\n\n\nParlAI is described in the following paper:\n[“ParlAI: A Dialog Research Software Platform\", arXiv:1705.06476](https://arxiv.org/abs/1705.06476)\nor see these [more up-to-date slides](https://drive.google.com/file/d/1JfUW4AVrjSp8X8Fp0_rTTRoLxUfW0aUm/view?usp=sharing).\n\nFollow us on [Twitter](https://twitter.com/parlai_parley) and check out our [Release\nnotes](https://github.com/facebookresearch/ParlAI/releases) to see the latest\ninformation about new features & updates, and the website\n[http://parl.ai](http://parl.ai) for further docs. For an archived list of updates,\ncheck out [NEWS.md](https://github.com/facebookresearch/ParlAI/blob/main/NEWS.md).\n\n<p align=\"center\"><img width=\"90%\" src=\"https://raw.githubusercontent.com/facebookresearch/ParlAI/main/docs/source/_static/img/parlai_example.png\" /></p>\n\n## Interactive Tutorial\n\nFor those who want to start with ParlAI now, you can try our [Colab Tutorial](https://colab.research.google.com/drive/1bRMvN0lGXaTF5fuTidgvlAl-Lb41F7AD#scrollTo=KtVz5dCUmFkN).\n\n## Installing ParlAI\n\n### Operating System\n\nParlAI should work as inteded under Linux or macOS. We do not support Windows at this time, but many users [report success on Windows using Python 3.8](https://github.com/facebookresearch/ParlAI/issues/3989) and issues with Python 3.9. We are happy to accept patches that improve Windows support.\n\n### Python Interpreter\n\nParlAI currently requires Python3.8+.\n\n### Requirements\n\nParlAI supports [Pytorch](https://pytorch.org) 1.6 or higher.\nAll requirements of the core modules are listed in [`requirements.txt`](https://github.com/facebookresearch/ParlAI/blob/main/requirements.txt). However, some models included (in [`parlai/agents`](https://github.com/facebookresearch/ParlAI/tree/main/parlai/agents)) have additional requirements.\n\n## Virtual Environment\n\nWe *strongly* recommend you install ParlAI in a virtual environment using [venv](https://docs.python.org/3/library/venv.html) or [conda](https://www.anaconda.com/).\n\n### End User Installation\n\nIf you want to use ParlAI without modifications, you can install it with:\n\n```bash\ncd /path/to/your/parlai-app\npython3.8 -m venv venv\nvenv/bin/pip install --upgrade pip setuptools wheel\nvenv/bin/pip install parlai\n```\n\n### Developer Installation\n\nMany users will want to modify some parts of ParlAI. To set up a development\nenvironment, run the following commands to clone the repository and install\nParlAI:\n\n```bash\ngit clone https://github.com/facebookresearch/ParlAI.git ~/ParlAI\ncd ~/ParlAI\npython3.8 -m venv venv\nvenv/bin/pip install --upgrade pip setuptools wheel\nvenv/bin/python setup.py develop\n```\n\n> **Note**\n> Sometimes the install from source maynot work due to dependencies (specially in PyTorch related packaged).\n> In that case try building a fresh conda environment and running the similar to the following:\n> `conda install pytorch==2.0.0 torchvision torchaudio torchtext pytorch-cuda=11.8 -c pytorch -c nvidia`.\n> Check torch setup documentation for your CUDA and OS versions.\n\nAll needed data will be downloaded to `~/ParlAI/data`. If you need to clear out\nthe space used by these files, you can safely delete these directories and any\nfiles needed will be downloaded again.\n\n## Documentation\n\n - [Quick Start](https://parl.ai/docs/tutorial_quick.html)\n - [Basics: world, agents, teachers, action and observations](https://parl.ai/docs/tutorial_basic.html)\n - [Creating a new dataset/task](http://parl.ai/docs/tutorial_task.html)\n - [List of available tasks/datasets](https://parl.ai/docs/tasks.html)\n - [Creating a seq2seq agent](https://parl.ai/docs/tutorial_torch_generator_agent.html)\n - [List of available agents](https://parl.ai/docs/agents_list.html)\n - [Model zoo (list pretrained models)](https://parl.ai/docs/zoo.html)\n - [Running crowdsourcing tasks](http://parl.ai/docs/tutorial_crowdsourcing.html)\n - [Plug into Facebook Messenger](https://parl.ai/docs/tutorial_chat_service.html)\n\n\n## Examples\n\nA large set of scripts can be found in [`parlai/scripts`](https://github.com/facebookresearch/ParlAI/tree/main/parlai/scripts). Here are a few of them.\nNote: If any of these examples fail, check the [installation section](#installing-parlai) to see if you have missed something.\n\nDisplay 10 random examples from the SQuAD task\n```bash\nparlai display_data -t squad\n```\n\nEvaluate an IR baseline model on the validation set of the Personachat task:\n```bash\nparlai eval_model -m ir_baseline -t personachat -dt valid\n```\n\nTrain a single layer transformer on PersonaChat (requires pytorch and torchtext).\nDetail: embedding size 300, 4 attention heads,  2 epochs using batchsize 64, word vectors are initialized with fasttext and the other elements of the batch are used as negative during training.\n```bash\nparlai train_model -t personachat -m transformer/ranker -mf /tmp/model_tr6 --n-layers 1 --embedding-size 300 --ffn-size 600 --n-heads 4 --num-epochs 2 -veps 0.25 -bs 64 -lr 0.001 --dropout 0.1 --embedding-type fasttext_cc --candidates batch\n```\n\n## Code Organization\n\nThe code is set up into several main directories:\n\n- [**core**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/core): contains the primary code for the framework\n- [**agents**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/agents): contains agents which can interact with the different tasks (e.g. machine learning models)\n- [**scripts**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/scripts): contains a number of useful scripts, like training, evaluating, interactive chatting, ...\n- [**tasks**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/tasks): contains code for the different tasks available from within ParlAI\n- [**mturk**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/mturk): contains code for setting up Mechanical Turk, as well as sample MTurk tasks\n- [**messenger**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/chat_service/services/messenger): contains code for interfacing with Facebook Messenger\n- [**utils**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/utils): contains a wide number of frequently used utility methods\n- [**crowdsourcing**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/crowdsourcing): contains code for running crowdsourcing tasks, such as on Amazon Mechanical Turk\n- [**chat_service**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/chat_service/services/messenger): contains code for interfacing with services such as Facebook Messenger\n- [**zoo**](https://github.com/facebookresearch/ParlAI/tree/main/parlai/zoo): contains code to directly download and use pretrained models from our model zoo\n\n## Support\nIf you have any questions, bug reports or feature requests, please don't hesitate to post on our [Github Issues page](https://github.com/facebookresearch/ParlAI/issues).\nYou may also be interested in checking out our [FAQ](https://parl.ai/docs/faq.html) and\nour [Tips n Tricks](https://parl.ai/docs/tutorial_tipsntricks.html).\n\nPlease remember to follow our [Code of Conduct](https://github.com/facebookresearch/ParlAI/blob/main/CODE_OF_CONDUCT.md).\n\n## Contributing\nWe welcome PRs from the community!\n\nYou can find information about contributing to ParlAI in our\n[Contributing](https://github.com/facebookresearch/ParlAI/blob/main/CONTRIBUTING.md)\ndocument.\n\n\n## The Team\nParlAI is currently maintained by Moya Chen, Emily Dinan, Dexter Ju, Mojtaba\nKomeili, Spencer Poff, Pratik Ringshia, Stephen Roller, Kurt Shuster,\nEric Michael Smith, Megan Ung, Jack Urbanek, Jason Weston, Mary Williamson,\nand Jing Xu. Kurt Shuster is the current Tech Lead.\n\nFormer major contributors and maintainers include Alexander H. Miller, Margaret\nLi, Will Feng, Adam Fisch, Jiasen Lu, Antoine Bordes, Devi Parikh, Dhruv Batra,\nFilipe de Avila Belbute Peres, Chao Pan, and Vedant Puri.\n\n## Citation\n\nPlease cite the [arXiv paper](https://arxiv.org/abs/1705.06476) if you use ParlAI in your work:\n\n```\n@article{miller2017parlai,\n  title={ParlAI: A Dialog Research Software Platform},\n  author={{Miller}, A.~H. and {Feng}, W. and {Fisch}, A. and {Lu}, J. and {Batra}, D. and {Bordes}, A. and {Parikh}, D. and {Weston}, J.},\n  journal={arXiv preprint arXiv:{1705.06476}},\n  year={2017}\n}\n```\n\n## License\nParlAI is MIT licensed. See the **[LICENSE](https://github.com/facebookresearch/ParlAI/blob/main/LICENSE)** file for details.\n",
  "source_type": "meta_github_repository",
  "domain": "meta_ai",
  "keywords": [
    "ai"
  ],
  "retrieval_tags": [
    "meta",
    "ai",
    "github",
    "repository",
    "research"
  ]
}