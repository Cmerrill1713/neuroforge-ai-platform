{
  "id": "wikipedia_Node.js",
  "title": "Node.js",
  "url": "https://en.wikipedia.org/wiki/Node.js",
  "content": "Node.js is a cross-platform, open-source JavaScript runtime environment that can run on Windows, Linux, Unix, macOS, and more. Node.js runs on the V8 JavaScript engine, and executes JavaScript code outside a web browser.\n\nNode.js lets developers use JavaScript to write command line tools and server-side scripting. The ability to run JavaScript code on the server is often used to generate dynamic web page content before the page is sent to the user's web browser. Consequently, Node.js represents a \"JavaScript everywhere\" paradigm,[6] unifying web-application development around a single programming language, as opposed to using different languages for the server- versus client-side programming.\n\nNode.js has an event-driven architecture capable of asynchronous I/O. These design choices aim to optimize throughput and scalability in web applications with many input/output operations, as well as for real-time Web applications (e.g., real-time communication programs and browser games).[7]\n\nThe Node.js distributed development project was previously governed by the Node.js Foundation,[8] and has now merged with the JS Foundation to form the OpenJS Foundation. OpenJS Foundation is facilitated by the Linux Foundation's Collaborative Projects program.[9]\n\nNode.js was initially written by Ryan Dahl in 2009,[10] about 13 years after the introduction of the first server-side JavaScript environment, Netscape's LiveWire Pro Web.[11] The initial release supported only Linux and Mac OS X. Its development and maintenance was led by Dahl and later sponsored by Joyent.[12]\n\nDahl criticized the limited capability of Apache HTTP Server to handle many (10,000+) concurrent connections, as well as the dominant programming paradigm of sequential programming, in which applications could block entire processes or cause the creation of multiple execution stacks for simultaneous connections.[citation needed]\n\nDahl demonstrated the project at the inaugural European JSConf on November 8, 2009.[13][14][15] Node.js combined Google's V8 JavaScript engine, an event loop, and a low-level I/O API.[16]\n\nIn January 2010, a package manager was introduced for the Node.js environment called npm.[17] The package manager allows programmers to publish and share Node.js packages, along with the accompanying source code, and is designed to simplify the installation, update and uninstallation of packages.[16]\n\nIn June 2011, Microsoft and Joyent implemented a native Windows version of Node.js.[18] The first Node.js build supporting Windows was released in July 2011.\n\nIn January 2012, Dahl yielded management of the project to npm creator Isaac Schlueter.[19] In January 2014, Schlueter announced that Timothy J. Fontaine would lead the project.[20]\n\nIn December 2014, Fedor Indutny created io.js, a fork of Node.js created because of dissatisfaction with Joyent's governance as an open-governance alternative with a separate technical committee. The goal was to enable a structure that would be more receptive to community input, including the updating of io.js with the latest Google V8 JavaScript engine releases, diverging from Node.js's approach at that time.[21]\n\nThe Node.js Foundation, formed to reconcile Node.js and io.js under a unified banner, was announced in February 2015.[22] The merger was realized in September 2015 with Node.js v0.12 and io.js v3.3 combining into Node v4.0.[23] This merge brought V8 ES6 features into Node.js and started a long-term support release cycle.[24] By 2016, the io.js website recommended returning to Node.js and announced no further io.js releases, effectively ending the fork and solidifying the merger's success.[25]\n\nIn 2019, the JS Foundation and Node.js Foundation merged to form the OpenJS Foundation.\n\nThe Node.js logo features a green hexagon with overlapping bands to represent the cross-platform nature of the runtime.[26] The Rocket Turtle was chosen as the official Node.js mascot in February 2024 following a design contest.[27]\n\nNode.js allows the creation of web servers and networking tools using JavaScript and a collection of \"modules\" that handle various core functionalities.[13][16][28][29][30] Modules are provided for file system I/O, networking (DNS, HTTP, TCP, TLS/SSL or UDP), binary data (buffers), cryptography functions, data streams and other core functions.[16][29][31] Node.js's modules use an API designed to reduce the complexity of writing server applications.[16][29]\n\nJavaScript is the only language that Node.js supports natively, but many compile-to-JS languages are available.[32] As a result, Node.js applications can be written in CoffeeScript,[33] Dart, TypeScript, ClojureScript and others.\n\nNode.js is primarily used to build network programs such as web servers.[28] The most significant difference between Node.js and PHP is that most functions in PHP block until completion (commands execute only after previous commands finish), while Node.js functions are non-blocking (commands execute concurrently and use callbacks to signal completion or failure).[28]\n\nNode.js is officially supported by Linux, macOS and Microsoft Windows 8.1 and Server 2012 (and later),[3] with Tier 2 support for SmartOS and IBM AIX and experimental support for FreeBSD. OpenBSD also works, and LTS versions are available for IBM i (AS/400).[34] The source code may also be built on similar operating systems that are not officially supported, such as NonStop OS[35] and Unix servers.\n\nNode.js enables development of fast web servers in JavaScript using event-driven programming.[16] Developers can create scalable servers without using threading by using a simplified model that uses callbacks to signal the completion of a task.[16][page needed] Node.js connects the ease of a scripting language (JavaScript) with the power of Unix network programming.[16]\n\nNode.js was built on top of Google's V8 JavaScript engine since it was open-sourced under the BSD license, and it contains comprehensive support for fundamental protocols such as HTTP, DNS and TCP.[13] JavaScript's existing popularity made Node.js accessible to the web-development community.[13]\n\nThere are thousands of open-source libraries for Node.js, most of which are hosted on the npm website. Multiple developer conferences and events are held that support the Node.js community, including NodeConf, Node Interactive, and Node Summit, as well as a number of regional events.\n\nThe open-source community has developed web frameworks to accelerate the development of applications. Such frameworks include Express.js, Socket.IO, Sails.js, Next.js and Meteor.[16][36] Various packages have also been created for interfacing with other languages or runtime environments such as Microsoft .NET.[37]\n\nModern desktop IDEs provide editing and debugging features specifically for Node.js applications. Such IDEs include Atom, Brackets, JetBrains WebStorm,[38][39] Microsoft Visual Studio (with Node.js Tools for Visual Studio,[40] or TypeScript with Node definitions[41][42][43][44]), NetBeans,[45] Nodeclipse Enide Studio[46] (Eclipse-based) and Visual Studio Code.[47][48] Some online IDEs also support Node.js, such as Codeanywhere, Eclipse Che, Cloud9 IDE and the visual flow editor in Node-RED.\n\nNode.js is supported across a number of cloud-hosting platforms such as Jelastic, Google Cloud Platform, AWS Elastic Beanstalk, Azure Web Apps and Joyent.\n\nNew major releases of Node.js are cut from the GitHub main branch every six months. Even-numbered versions are cut in April and odd-numbered versions are cut in October. When a new odd version is released, the previous even version undergoes transition to Long Term Support (LTS), which gives that version 12 months of active support from the date it is designated LTS. After these 12 months expire, an LTS release receives an additional 18 months of maintenance support. An active version receives non-breaking backports of changes a few weeks after they land in the current release. A maintenance release receives only critical fixes and documentation updates.[49] The LTS Working Group manages strategy and policy in collaboration with the Technical Steering Committee of the Node.js Foundation.\n\nNode.js is a JavaScript runtime environment that processes incoming requests in a loop, called the event loop.\n\nNode.js uses libuv under the hood to handle asynchronous events. Libuv is an abstraction layer for network and file system functionality on both Windows and POSIX-based systems such as Linux, macOS, OSS on NonStop, and Unix. Node.js relies on nghttp2 for HTTP support. As of version 20, Node.js uses the ada library which provides up-to-date WHATWG URL compliance. As of version 19.5, Node.js uses the simdutf library for fast Unicode validation and transcoding. As of version 21.3, Node.js uses the simdjson library for fast JSON parsing.\n\nNode.js operates on a single-thread event loop, using non-blocking I/O calls, allowing it to support tens of thousands of concurrent connections without incurring the cost of thread context switching.[53] The design of sharing a single thread among all the requests that use the observer pattern is intended for building highly concurrent applications, where any function performing I/O must use a callback. To accommodate the single-threaded event loop, Node.js uses the libuv library—which, in turn, uses a fixed-sized thread pool that handles some of the non-blocking asynchronous I/O operations.[7]\n\nA thread pool handles the execution of parallel tasks in Node.js. The main thread function call posts tasks to the shared task queue, which threads in the thread pool pull and execute. Inherently non-blocking system functions such as networking translate to kernel-side non-blocking sockets, while inherently blocking system functions such as file I/O run in a blocking way on their own threads. When a thread in the thread pool completes a task, it informs the main thread of this, which in turn, wakes up and executes the registered callback.\n\nA downside of th...",
  "source_type": "wikipedia_article",
  "domain": "general_knowledge",
  "keywords": [
    "wikipedia",
    "ai",
    "programming",
    "technology",
    "node.js"
  ],
  "retrieval_tags": [
    "wikipedia",
    "article",
    "ai",
    "programming",
    "knowledge"
  ]
}