{
  "id": "github_879340048",
  "title": "anthropic-computer-use-bash-and-files",
  "description": "",
  "url": "https://github.com/disler/anthropic-computer-use-bash-and-files",
  "language": "Python",
  "stars": 138,
  "forks": 40,
  "created_at": "2024-10-27T16:44:19Z",
  "updated_at": "2025-09-17T06:25:35Z",
  "topics": [],
  "readme_content": "# Anthropic Computer Use POC -> Bash and Text Tools\n> Let Claude 3.5 Sonnet NEW operate your terminal and edit your files for you.\n> \n> Proof of concept. \n> Fork and start building your next Gen Developer Tools.\n>\n> 🚀 Watch the walk through [video here](https://youtu.be/FxwA0DLxyrw).\n\n<img src=\"./images/computer-use-thumb.png\" alt=\"anthropic-computer-use\" style=\"max-width: 800px;\">\n\n## 📌 Interesting notes\n> **Big takeaway: The AI Agents are coming** and for you and I, the engineer, **they're already here**.\n\n- What does a prompt + code + related tools get you: AI Agents.\n  - `It's clear this is the setup for AI Agents.`\n  - Anthropic has created the first set of problem specific tools (tool belt) that are good (great) enough to be useful NEARLY out of the box.\n  - We'll see if OpenAI and Google follow suit with this pattern.\n- Anthropics text and bash tools are low key, very powerful. Engineers will miss this at first.\n- The text editor tool supports five commands (tools): `view, create, str_replace, insert, and undo_edit`.\n- The bash just has one tool `command`.\n- Upon consuming your prompt, it will generate and execute a series of these tools based on your prompt that you're code will run.\n- The real innovation here to me is two fold.\n  - First, sonnet THINKS, and runs a SERIES ((`prompt chaining strikes again`)) of these tools based on your prompt.\n  - Second, the tools execute very well, are context aware and follow instructions very well. This is likely due to the upgraded claude 3.5 sonnet being fine-tuned on these tools.\n    - This is a game changer and a pattern we'll likely see more of from model providers: `fine-tuning on sets of tools for specific tasks`.\n- Logging is super important here to monitor what is happening and how the tools are being used to accomplish your goal.\n\n\n\n## ⚙️ Setup\n- `brew install uv` or [install another way](https://docs.astral.sh/uv/getting-started/installation/#pypi).\n- `uv sync`\n- `cp .env.sample .env` and set your ANTHROPIC_API_KEY\n- (text mode) `uv run main \"hi please create a file called 'ping.txt' and write 'pong' in it.\"`\n  - This will create a file at `./editor_dir/ping.txt` with the text `pong`.\n- (bash mode) `uv run main \"show me the contents of the current directory\" --mode bash`\n\n## 🚀 Usage\n\n### Editor Tool Usage\n- Create and edit files with natural language:\n  - `uv run main \"hi please create a file called 'ping.txt' and write 'pong' in it.\"`\n  - `uv run main \"update the config.json file to add a new logging section\" --mode editor`\n  - `uv run main \"create a new Python script that implements a basic web server\" --mode editor`\n\n### Bash Tool Usage  \n- Execute shell commands through Claude:\n  - `uv run main \"show me the contents of the current directory\" --mode bash`\n  - `uv run main \"show me the contents of the current directory\" --mode bash--no-agi` (safe mode)\n  - `uv run main \"list tables from the data/app.db file\" --mode bash`\n  - `uv run main \"read the first 3 lines of README.md and write insert them into the data/app.db sqlite database logging table\" --mode bash` \n\n## 🌟 Very cool command sequence\n- `uv run main \"write a detailed 3 use case document for llms to a 'llm_use_cases.md' markdown file. then break that file into three going into details about the use cases.\"`\n  - This will create a file at `./repo/llm_use_cases.md` with the 3 use cases.\n  - Then it will break that file into three going into details about the use cases.\n- `uv run main \"update the llm_use_cases.md file to add a fourth use case for data analysis and insights.\"`\n- `uv run main \"read the llm_use_cases.md file and update it to contain a mermaid diagram of the use cases.\"`\n- `uv run main \"update llm_use_cases.md: simplify the mermaid chart and make it lr.\"`\n\n## 🔄 Application Workflow\n\n```mermaid\nflowchart TD\nA[Start: User Input] --> B{Mode Selected?}                                                                                     \n                                                                                                                                \nB -- Editor --> C[Initialize EditorSession]                                                                                    \n                                                                                                                              \nB -- Bash --> D[Initialize BashSession]                                                                                        \n                                                                                                                              \nC --> E[Set up Logging]                                                                                                        \n                                                                                                                              \nD --> E[Set up Logging]                                                                                                        \n                                                                                                                              \nE --> F[Send Prompt to Claude API]                                                                                             \n                                                                                                                              \nF --> G[Model Processes Prompt]                                                                                                \n                                                                                                                              \nG --> H{Tool Calls Generated?}                                                                                                 \n                                                                                                                              \nH -- Yes --> I[Execute Tool Calls]                                                                                             \n                                                                                                                              \nI --> J[Return Results to Model]                                                                                               \n                                                                                                                              \nJ --> G[Model Processes Prompt]                                                                                                \n                                                                                                                              \nH -- No --> K[Finalize Response]                                                                                               \n                                                                                                                              \nK --> L[Log Token Usage and Cost]                                                                                              \n                                                                                                                              \nL --> M[End]        \n```\n\n- The user provides a prompt to the application along with an optional mode (`editor` or `bash`).\n- The application generates a session ID and initializes a `SessionLogger`.\n- Depending on the chosen mode, either an `EditorSession` or `BashSession` is instantiated.\n- The session sets up logging and assigns the `SessionLogger`.\n- The application sends the user's prompt to the Claude model via the Anthropics API, including the appropriate system prompts and tool configurations.\n- The model processes the prompt and may generate tool calls (e.g., text editing commands or bash commands).\n- The application handles any tool calls by executing them and providing results back to the model if needed.\n- The application may iterate through multiple interactions based on the model's responses.\n- Upon completion, the application logs the total token usage and calculates the associated cost.\n\n\n## 📚 Resources                                                                                                                   \n                                                                                                                              \n- https://docs.anthropic.com/en/docs/build-with-claude/computer-use                                                            \n- https://github.com/anthropics/anthropic-quickstarts/blob/main/computer-use-demo/computer_use_demo/loop.py   \n",
  "source_type": "github_repository",
  "domain": "software_development",
  "keywords": [],
  "retrieval_tags": [
    "github",
    "repository",
    "code",
    "development"
  ]
}